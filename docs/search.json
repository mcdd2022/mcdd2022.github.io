[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mayra Coruh",
    "section": "",
    "text": "Hi! I’m Mayra. I’m from Istanbul, Turkey and I’m a junior at Pomona College, majoring in Cognitive Science, thinking of concentrating in Human-Centered Design and minoring in Data Science. I love creating things (painting, collaging, etc.), travelling, and spending quality time with my family and friends, including my dog!"
  },
  {
    "objectID": "TidyTuesday.html",
    "href": "TidyTuesday.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\n\nRows: 238 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): campus_name, campus_location, community_type\ndbl (2): rating, students\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\nRows: 238 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): campus_name, campus_location\nlgl (16): public, private, doctoral, masters, baccalaureate, community, resi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "summermovies.html",
    "href": "summermovies.html",
    "title": "Summer Movies",
    "section": "",
    "text": "library(tidyverse)\n\n\n# Option 2: Read directly from GitHub\n\nsummer_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movie_genres.csv')\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movies.csv')\n\n\nsummer_movies %&gt;% ggplot(aes(x = runtime_minutes, y = average_rating)) +\n  geom_point() +\n  labs(\n    x = \"Runtime (minutes)\",\n    y = \"Average IMDb Rating\",\n    title = \"Distribution of IMDb Ratings by Movie Runtime\"\n  )"
  },
  {
    "objectID": "pride.html",
    "href": "pride.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\n\nlibrary(tidyverse)\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "Mini-Project 2.html",
    "href": "Mini-Project 2.html",
    "title": "Friends Dialogue",
    "section": "",
    "text": "library(friends)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\ndata(friends)\n\n\nFinding the number of times Rachel says “honey” across all seasons\n\nrachel_dialogue &lt;- friends |&gt;\n  dplyr::filter(speaker == \"Rachel Green\") |&gt;\n  select(season, text)\n\nrachel_honey_count &lt;- rachel_dialogue |&gt;\n  mutate(honey_count = str_count(text, \"(?i)\\\\bhoney\\\\b\"))\n\nhoney_by_season &lt;- rachel_honey_count |&gt;\n  group_by(season) |&gt; \n  summarise(total_honey = sum(honey_count))\n\nggplot(honey_by_season, aes(x = season, y = total_honey)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  theme_minimal() +\n  labs(\n      title = \"Number of Times Rachel Says 'Honey' per Season\",\n       x = \"Season\",\n       y = \"Number of 'Honey' Occurrences\"\n)\n\n\n\n\n\n\n\n\n\n\nDescription of Insights\nThe histogram illustrates that the use of “honey” fluctuates significantly across seasons, with some seasons showing higher frequencies than others. Rachel’s use of “honey” peaks during Season 3 with the highest number of occurrence of 40. Another peak occurs with where the number of occurrences is approximately 35. In seasons 2 and 7, there is a moderate use of the word “honey,” with occurrences around 20-25, suggesting that Rachel uses “honey” consistently but less frequently in these seasons. The lowest use of “honey” is in Season 1, with less than 10 occurrences. Similarly, Rachel uses “honey” in less in later seasons. For instance, in Season 10, number of occurrences falls below 10. Overall, the plot indicates that Rachel’s use of the term “honey” peaks during the middle seasons of the the show and drops off significantly in the early and final seasons. I wonder how this might relate a more nuanced analysis on the relationship between Rachel’s dialogue and emotional state across seasons.\n\n\nAnalysis of Utterance Categories\n\nsummary_data &lt;- friends |&gt;\n  mutate(text_lower = str_to_lower(text),  \n        is_love = str_detect(text_lower, \"\\\\blove\\\\b\"),\n        is_question = str_detect(text_lower, \"^(what|where|who|when|how)\"),\n        has_multiple_exclamations = str_detect(text_lower, \"!{2,}\")\n  )\n\nsummary_data &lt;- summary_data |&gt;\n  summarise(\n      love_statements = sum(is_love),\n      questions = sum(is_question),\n      multiple_exclamations = sum(has_multiple_exclamations)\n      ) |&gt;\n  pivot_longer(cols = everything(), names_to = \"category\", values_to = \"count\")\n\n # total_data = full_join(summary_data, friends, by =\"speaker\") --&gt; new fata frame that has count and category columns. the problem is that the category is not in summary_data\n\nsummary_data |&gt;\n  ggplot(aes(x = category, y = count, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analysis of Utterance Categories\", x = \"Category\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDescription of Insights"
  },
  {
    "objectID": "friendsdialogue.html",
    "href": "friendsdialogue.html",
    "title": "Friends Dialogue",
    "section": "",
    "text": "library(friends)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\ndata(friends)\n\n\nFinding the number of times Rachel says “honey” across all seasons\n\nrachel_dialogue &lt;- friends |&gt;\n  dplyr::filter(speaker == \"Rachel Green\") |&gt;\n  select(season, text)\n\nrachel_honey_count &lt;- rachel_dialogue |&gt;\n  mutate(honey_count = str_count(text, \"(?i)\\\\bhoney\\\\b\"))\n\nhoney_by_season &lt;- rachel_honey_count |&gt;\n  group_by(season) |&gt; \n  summarise(total_honey = sum(honey_count))\n\nggplot(honey_by_season, aes(x = season, y = total_honey)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  theme_minimal() +\n  labs(\n      title = \"Number of Times Rachel Says 'Honey' per Season\",\n       x = \"Season\",\n       y = \"Number of 'Honey' Occurrences\"\n)\n\n\n\n\n\n\n\n\n\n\nDescription of Insights\nThe histogram illustrates that the use of “honey” fluctuates significantly across seasons, with some seasons showing higher frequencies than others. Rachel’s use of “honey” peaks during Season 3 with the highest number of occurrence of 40. Another peak occurs with where the number of occurrences is approximately 35. In seasons 2 and 7, there is a moderate use of the word “honey,” with occurrences around 20-25, suggesting that Rachel uses “honey” consistently but less frequently in these seasons. The lowest use of “honey” is in Season 1, with less than 10 occurrences. Similarly, Rachel uses “honey” in less in later seasons. For instance, in Season 10, number of occurrences falls below 10. Overall, the plot indicates that Rachel’s use of the term “honey” peaks during the middle seasons of the the show and drops off significantly in the early and final seasons. I wonder how this might relate a more nuanced analysis on the relationship between Rachel’s dialogue and emotional state across seasons.\n\n\nAnalysis of Utterance Categories\n\nsummary_data &lt;- friends |&gt;\n  mutate(text_lower = str_to_lower(text),  \n        is_love = str_detect(text_lower, \"\\\\blove\\\\b\"),\n        is_question = str_detect(text_lower, \"^(what|where|who|when|how)\"),\n        has_multiple_exclamations = str_detect(text_lower, \"!{2,}\")\n  )\n\nsummary_data &lt;- summary_data |&gt;\n  summarise(\n      love_statements = sum(is_love),\n      questions = sum(is_question),\n      multiple_exclamations = sum(has_multiple_exclamations)\n      ) |&gt;\n  pivot_longer(cols = everything(), names_to = \"category\", values_to = \"count\")\n\n # total_data = full_join(summary_data, friends, by =\"speaker\") --&gt; new fata frame that has count and category columns. the problem is that the category is not in summary_data\n\nsummary_data |&gt;\n  ggplot(aes(x = category, y = count, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analysis of Utterance Categories\", x = \"Category\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDescription of Insights"
  }
]