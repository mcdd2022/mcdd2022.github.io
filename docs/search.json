[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mayra Coruh",
    "section": "",
    "text": "Hi! I’m Mayra. I’m from Istanbul, Turkey and I’m a junior at Pomona College, majoring in Cognitive Science, thinking of concentrating in Human-Centered Design and minoring in Data Science. I love creating things (painting, collaging, etc.), travelling, and spending quality time with my family and friends, including my dog!"
  },
  {
    "objectID": "TidyTuesday.html",
    "href": "TidyTuesday.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\n\nRows: 238 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): campus_name, campus_location, community_type\ndbl (2): rating, students\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\nRows: 238 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): campus_name, campus_location\nlgl (16): public, private, doctoral, masters, baccalaureate, community, resi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "summermovies.html",
    "href": "summermovies.html",
    "title": "Summer Movies",
    "section": "",
    "text": "library(tidyverse)\n\n\n# Option 2: Read directly from GitHub\n\nsummer_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movie_genres.csv')\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movies.csv')\n\n\nsummer_movies %&gt;% ggplot(aes(x = runtime_minutes, y = average_rating)) +\n  geom_point() +\n  labs(\n    x = \"Runtime (minutes)\",\n    y = \"Average IMDb Rating\",\n    title = \"Distribution of IMDb Ratings by Movie Runtime\"\n  )"
  },
  {
    "objectID": "pride.html",
    "href": "pride.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\n\nlibrary(tidyverse)\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "Mini-Project 2.html",
    "href": "Mini-Project 2.html",
    "title": "Friends Dialogue",
    "section": "",
    "text": "library(friends)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\ndata(friends)\n\n\nFinding the number of times Rachel says “honey” across all seasons\n\nrachel_dialogue &lt;- friends |&gt;\n  dplyr::filter(speaker == \"Rachel Green\") |&gt;\n  select(season, text)\n\nrachel_honey_count &lt;- rachel_dialogue |&gt;\n  mutate(honey_count = str_count(text, \"(?i)\\\\bhoney\\\\b\"))\n\nhoney_by_season &lt;- rachel_honey_count |&gt;\n  group_by(season) |&gt; \n  summarise(total_honey = sum(honey_count))\n\nggplot(honey_by_season, aes(x = season, y = total_honey)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  theme_minimal() +\n  labs(\n      title = \"Number of Times Rachel Says 'Honey' per Season\",\n       x = \"Season\",\n       y = \"Number of 'Honey' Occurrences\"\n)\n\n\n\n\n\n\n\n\n\n\nDescription of Insights\nThe histogram illustrates that the use of “honey” fluctuates significantly across seasons, with some seasons showing higher frequencies than others. Rachel’s use of “honey” peaks during Season 3 with the highest number of occurrence of 40. Another peak occurs with where the number of occurrences is approximately 35. In seasons 2 and 7, there is a moderate use of the word “honey,” with occurrences around 20-25, suggesting that Rachel uses “honey” consistently but less frequently in these seasons. The lowest use of “honey” is in Season 1, with less than 10 occurrences. Similarly, Rachel uses “honey” in less in later seasons. For instance, in Season 10, number of occurrences falls below 10. Overall, the plot indicates that Rachel’s use of the term “honey” peaks during the middle seasons of the the show and drops off significantly in the early and final seasons. I wonder how this might relate a more nuanced analysis on the relationship between Rachel’s dialogue and emotional state across seasons.\n\n\nAnalysis of Utterance Categories\n\nsummary_data &lt;- friends |&gt;\n  mutate(text_lower = str_to_lower(text),  \n        is_love = str_detect(text_lower, \"\\\\blove\\\\b\"),\n        is_question = str_detect(text_lower, \"^(what|where|who|when|how)\"),\n        has_multiple_exclamations = str_detect(text_lower, \"!{2,}\")\n  )\n\nsummary_data &lt;- summary_data |&gt;\n  summarise(\n      love_statements = sum(is_love),\n      questions = sum(is_question),\n      multiple_exclamations = sum(has_multiple_exclamations)\n      ) |&gt;\n  pivot_longer(cols = everything(), names_to = \"category\", values_to = \"count\")\n\n # total_data = full_join(summary_data, friends, by =\"speaker\") --&gt; new fata frame that has count and category columns. the problem is that the category is not in summary_data\n\nsummary_data |&gt;\n  ggplot(aes(x = category, y = count, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analysis of Utterance Categories\", x = \"Category\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDescription of Insights"
  },
  {
    "objectID": "friendsdialogue.html",
    "href": "friendsdialogue.html",
    "title": "Friends Dialogue",
    "section": "",
    "text": "library(friends)\nlibrary(stringr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\ndata(friends)\n\n\nFinding the number of times Rachel says “honey” across all seasons\n\nrachel_dialogue &lt;- friends |&gt;\n  dplyr::filter(speaker == \"Rachel Green\") |&gt;\n  select(season, text)\n\nrachel_honey_count &lt;- rachel_dialogue |&gt;\n  mutate(honey_count = str_count(text, \"(?i)\\\\bhoney\\\\b\"))\n\nhoney_by_season &lt;- rachel_honey_count |&gt;\n  group_by(season) |&gt; \n  summarise(total_honey = sum(honey_count))\n\nggplot(honey_by_season, aes(x = season, y = total_honey)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  theme_minimal() +\n  labs(\n      title = \"Number of Times Rachel Says 'Honey' per Season\",\n       x = \"Season\",\n       y = \"Number of 'Honey' Occurrences\"\n)\n\n\n\n\n\n\n\n\n\n\nDescription of Insights\nThe histogram illustrates how the use of the word “honey” by Rachel fluctuates across seasons, with some seasons showing higher frequencies than others. Rachel’s use of “honey” peaks during Season 3 with the highest number of occurrence of 40. Another peak occurs in Season 5, with a number of occurrence of approximately 35. In seasons 2 and 7, there is a moderate use of the word “honey,” with occurrences around 20-25, suggesting that Rachel uses “honey” consistently but less frequently in these seasons. The lowest number of times “honey” is used is in Season 1, with less than 10 occurrences. Similarly, Rachel uses “honey” less in later seasons. For instance, in Season 10, number of occurrences falls below 10. Overall, the plot indicates that Rachel’s use of the term “honey” peaks during the middle seasons of the the show and drops off significantly in the early and final seasons. I wonder how this might relate to a more nuanced analysis on the relationship between Rachel’s emotional state and dialogue across seasons. So, for instance, can there be a correlation between her use of “honey” and her emotional state? This analysis could be interesting if particular events in her life are taken as reference points, such as her relationship with Ross (times/seasons when their together and when they are not etc.).\n\n\nAnalysis of Utterance Categories\n\nsummary_data &lt;- friends |&gt;\n  mutate(text_lower = str_to_lower(text),  \n        is_love = str_detect(text_lower, \"\\\\blove\\\\b\"),\n        is_question = str_detect(text_lower, \"^(what|where|who|when|how)\"),\n        has_multiple_exclamations = str_detect(text_lower, \"!{2,}\")\n  )\n\nsummary_data &lt;- summary_data |&gt;\n  summarise(\n      love_statements = sum(is_love),\n      questions = sum(is_question),\n      multiple_exclamations = sum(has_multiple_exclamations)\n      ) |&gt;\n  pivot_longer(cols = everything(), names_to = \"category\", values_to = \"count\")\n\n # total_data = full_join(summary_data, friends, by =\"speaker\") --&gt; new fata frame that has count and category columns. the problem is that the category is not in summary_data\n\nsummary_data |&gt;\n  ggplot(aes(x = category, y = count, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Analysis of Utterance Categories\", x = \"Category\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDescription of Insights\nThe histogram provides information on the different types of utterances across three categories: love statements, multiple exclamations, and questions. The plot depicts that the questions category has the highest count of occurrences with over 3000 instances, indicating that speakers in the show ask questions more frequently than they express love or use exclamations. Furthermore, having a count between 1500 and 2000, multiple_exclamations is the second most frequent category. This suggests that expressions of excitement or heightened emotions, which are identified by multiple exclamations, are relatively common but not as common as questions. Lastly, love statements is the least frequent category, with a count of around 1000. This implies that expressions of love occur less frequently compared to the other two categories. Overall, the graph analyzes the nature of communication in Friends across the three parameters of love statements, multiple exclamations, and questions."
  },
  {
    "objectID": "Project3.html",
    "href": "Project3.html",
    "title": "LA Homes",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggplot2)\nlibrary(openintro)\nlibrary(dplyr)\n\nResearch Question: How do the locations of homes in Santa Monica and Long Beach affect their listing prices? Null Hypothesis: There is no significant difference in the mean listing prices of homes between Santa Monica and Long Beach.\nPlan:\nIn this analysis of the LA homes dataset, I conduct a permutation test to assess whether the city in which a home is located (specifically between Santa Monica and Long Beach) has a significant effect on the listing price. I begin by filtering the data to only include homes from these two cities. I then create a function that calculates the permuted mean difference in listing prices by randomly shuffling the city labels while keeping the prices fixed. This process is repeated multiple times through the map() function to generate a distribution of permuted mean differences under the null hypothesis, which states that the mean listing prices between the two cities are the same. Then, I calculate the observed mean difference and compare it to the distribution of permuted differences to compute the p-value. Finally, I visualize the distribution of these permuted mean differences and mark the observed mean difference to assess its significance.\n\nhead(LAhomes)\n\n# A tibble: 6 × 8\n  city       type    bed  bath garage  sqft pool   price\n  &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 Long Beach &lt;NA&gt;      0     1      0   513 N     119000\n2 Long Beach &lt;NA&gt;      0     1      0   550 N     153000\n3 Long Beach &lt;NA&gt;      0     1      0   550 N     205000\n4 Long Beach &lt;NA&gt;      0     1      1  1030 N     300000\n5 Long Beach &lt;NA&gt;      0     1      1  1526 N     375000\n6 Long Beach &lt;NA&gt;      1     1      0   552 N     159900\n\ntwoLAhomes &lt;- LAhomes %&gt;% \n  filter(city %in% c(\"Santa Monica\", \"Long Beach\"))\n\nperm_data &lt;- function(rep, data) {\n  data |&gt; \n    mutate(city_perm = sample(city, replace = FALSE)) |&gt; \n    group_by(city_perm) |&gt; \n    summarise(\n      perm_ave = mean(price, na.rm = TRUE)\n    ) |&gt; \n    summarise(\n      perm_ave_diff = diff(perm_ave),\n      rep = rep\n    )\n}\n\nobserved_diff &lt;- twoLAhomes |&gt; \n  group_by(city) |&gt; \n  summarise(obs_ave = mean(price, na.rm = TRUE)) |&gt; \n  mutate(obs_ave_diff = diff(obs_ave)) |&gt; \n  pull()\n\nset.seed(123)  \nnum_reps &lt;- 500\nperm_results &lt;- map_dfr(1:num_reps, ~ perm_data(.x, twoLAhomes))\n\n\n\np_value &lt;- mean(abs(perm_results$perm_ave_diff) &gt; observed_diff)\n\np_value\n\n[1] 0\n\nhist(perm_results$perm_ave_diff)\n\n\n\n\n\n\n\nperm_results %&gt;% \nggplot(aes(x = perm_ave_diff)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  geom_vline(xintercept = observed_diff, color = \"red\", linetype = \"dashed\", linewidth = 1) +\n  labs(\n    title = \"Distribution of Permuted Mean Differences\",\n    subtitle = paste(\"Observed Mean Difference =\", round(observed_diff, 2)),\n    x = \"Permuted Average Difference\",\n    y = \"Frequency\"\n  ) +\n  xlim(-800000, 800000) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nWhat I Did:\nIn my analysis of the LA homes dataset, focusing on whether the city in which a home is located (specifically between Santa Monica and Long Beach) affects the listing price, I created a function that calculates the permuted mean difference. This function shuffles the city labels while keeping the prices fixed, simulating what the mean difference would look like under the null hypothesis. Using the map_dfr() function, I ran 500 iterations of this permutation process and compiled the results into a data frame. I then visualized the results by plotting a histogram of the distribution of permuted mean differences and marked the observed mean difference with a red dashed line for comparison. Finally, I calculated the p-value to determine the proportion of permuted mean differences that were greater than the observed mean difference. Under the null hypothesis and assuming that the average home prices in Santa Monica and Long Beach come from the same distribution, the p-value represents the probability of observing a mean difference as large as the actual observed difference (754,943.92) by random chance. If the p-value is approximately 0%, this indicates that it is highly unlikely to observe such a difference under the null hypothesis. Therefore, we can reject the null hypothesis and conclude that there is a significant difference in the average home prices between Santa Monica and Long Beach.\nInsights from the Plot:\nIn terms of the distribution of permuted differences, the histogram depicts the distribution of permuted mean differences under the null hypothesis, which assumes there is no significant difference in mean home prices between Santa Monica and Long Beach. The fact that the distribution is centered around zero indicates that when city labels are shuffled, the mean difference is typically around zero.\nIn terms of observed mean difference, the red dashed line represents the observed mean difference (754,943.92) between the actual home prices in Santa Monica and Long Beach. This value is beyond the range of most of the permuted mean differences.\nIn terms of the significance of the observed difference, the fact that the observed mean difference is far to the right of the distribution of permuted differences suggests that the observed difference is unlikely to occur by random chance. This implies that the city (Santa Monica or Long Beach) does have a significant effect on the mean home price.\nIn terms of what the p-value means, since the calculated p-value is approximately 0, it can be said that the observed mean difference is statistically significant. By suggesting that the mean home price in Santa Monica and Long beach differ significantly, the p-value allows us to reject the null hypothesis.\nSource of Data: https://openintrostat.github.io/openintro/reference/LAhomes.html#ref-examples"
  }
]