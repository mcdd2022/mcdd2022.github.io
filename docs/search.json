[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mayra Coruh",
    "section": "",
    "text": "Hi! I’m Mayra. I’m from Istanbul, Turkey and I’m a junior at Pomona College, majoring in Cognitive Science, thinking of concentrating in Human-Centered Design and minoring in Data Science. I love creating things (painting, collaging, etc.), travelling, and spending quality time with my family and friends, including my dog!"
  },
  {
    "objectID": "TidyTuesday.html",
    "href": "TidyTuesday.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\n\nRows: 238 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): campus_name, campus_location, community_type\ndbl (2): rating, students\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\nRows: 238 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): campus_name, campus_location\nlgl (16): public, private, doctoral, masters, baccalaureate, community, resi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "summermovies.html",
    "href": "summermovies.html",
    "title": "Summer Movies",
    "section": "",
    "text": "library(tidyverse)\n\n\n# Option 2: Read directly from GitHub\n\nsummer_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movie_genres.csv')\nsummer_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-07-30/summer_movies.csv')\n\n\nsummer_movies %&gt;% ggplot(aes(x = runtime_minutes, y = average_rating)) +\n  geom_point() +\n  labs(\n    x = \"Runtime (minutes)\",\n    y = \"Average IMDb Rating\",\n    title = \"Distribution of IMDb Ratings by Movie Runtime\"\n  )"
  },
  {
    "objectID": "pride.html",
    "href": "pride.html",
    "title": "Pride Index",
    "section": "",
    "text": "# Option 2: Read directly from GitHub\n\npride_index &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index.csv')\npride_index_tags &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-11/pride_index_tags.csv')\n\n\nlibrary(tidyverse)\npride_index %&gt;% ggplot(aes(x = community_type, y = rating)) +\n  geom_boxplot() +\n  labs(\n    x = \"Community Type\",\n    y = \"Rating\",\n    title = \"Campus Pride Index Across Different Community Types\",\n  )"
  },
  {
    "objectID": "Mini-Project 2.html",
    "href": "Mini-Project 2.html",
    "title": "Finding the number of times Rachel says “honey” across all seasons",
    "section": "",
    "text": "library(friends)\nlibrary(stringr)\ndata(friends)\n\n\nFinding the number of times Rachel says “honey” across all seasons\n\nrachel_dialogue &lt;- friends |&gt;\n  dplyr::filter(speaker == \"Rachel Green\")\n\nrachel_honey_dialogues &lt;- rachel_dialogue |&gt;\n  dplyr::filter(str_detect(text, \"a\" ))"
  }
]